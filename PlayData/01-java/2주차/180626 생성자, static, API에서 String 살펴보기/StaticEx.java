/*
1.static 영역에 할당된다. ( static / heap / stack )
2.다른 멤버보다 먼저 할당된다.
3.static 메서드는 static 변수만 호출할 수 있다.
4.객체없이 접근 가능하다.
5.자동 초기화 된다. 초기화는 한번만 수행한다.
6.모든 객체(Object)들이 사용 할 수 있도록 공유개념을 가진다
7.클래스 변수 / 클래스 메서드라고도 한다.
*/

class StaticEx {
	private int a=10;
	private static int b=10;	//클래스 변수 / 공유하니깐 / 왜 공유하냐 / 한번만 할당되니까 / 왜 한번만? / 먼저 할당되니까.

	public static void main(String[] args) {
		StaticEx se1 = new StaticEx();
		System.out.println(" a : " + se1.a);
		System.out.println(" b : " + b);
		System.out.println(" b : " + se1.b);
		System.out.println(" b : " + StaticEx.b);

/*
5.자동 초기화 된다. 초기화는 한번만 수행한다.
6.모든 객체(Object)들이 사용 할 수 있도록 공유개념을 가진다
7.클래스 변수 / 클래스 메서드라고도 한다.
*/

	se1.a += 10;
	se1.b += 10;
	System.out.println("se1 a : "+ se1.a);
	System.out.println("se1 b : "+ se1.b);

	StaticEx se2 = new StaticEx();
	se2.a += 10;
	se2.b += 10;		// 현재 b는 static 영역에 올라가서 공유 중이다.
	System.out.println("se2 a : "+ se2.a);	//20
	System.out.println("se2 b : "+ se2.b);	//30
	}

}


/*필기
	private int a=10;
	private int b=10;
요렇게 하고 메인에서 시스아웃 했다
에러남. non-static variable a cannot be referenced from a static context
이게 에러도 되게 특이하게 나. 변수가 없어서 에러가 나는 것도 아니고 접근 제한에서 에러가 나는 것도 아냐
에러메세지 보면 non-static 인 변수는 static 영역에서 호출할 수가 없대 3번

static은 한번 올려놓으면 프로그램 끝날때까지 있다보니깐(메모리 관리가 안되다 보니까)
C에서는 쓰지 말라하고
자바에서는 많이 쓰라그래. 편한걸 더 추구하니깐

왜 스테틱에서 논스테틱을 못 불러오느냐
2번 때문에 그래
스테틱은 처음부터 끝까지 남아있다그랬지 메모리 할당 해라마라 못해
그냥 알아서 메모리 할당이 되버림
프로그램을 땅 시작하면 메모리할당 따ㅏㅏ따따따 되고 나서(메모리 할당) 밑에게 실행되
a랑 b 라는 변수는 객체가 생성될 때 메모리 할당이 되는거야
객체 어디서 해? 메인에서 해
메인은 이미 생겨있어 스테틱
근데 a랑 b는 아직 객체가 생성이 안되어있기 때문에 넣을 수가 없지
땅이 없는데 어떻게 방을 만들어

메인이 실행된 상태에서는 에이랑 비는 없는거에요 그게 이 얘기입니다.
				private int a=10;
				private int b=10;
				요렇게 하고 메인에서 시스아웃 했다
				에러남. non-static variable a cannot be referenced from a static context

그럼 a랑 b를 스테틱으로 잡으면 쓸 수 있냐.
쓸 수 있습니다.
	private int a=10;
	private static int b=10;
	a만 에러가 남
프로그램이 실행 되면 b가 메모리 할당 됐고 메인이 메모리 할당 됐고. 실행할래는데 a는 없네 / 

a를 쓰려면 객체를 생성해야됨.
		StaticEx se1 = new StaticEx();
		System.out.println(" a : " + se1.a);

메인이 스테틱이 아니면?
프로그램이 시작되면 메인부터 찾고 들어와야 되기 때문에 스테틱일 수밖에 없어.
그래서 메인 안에서는 스테틱이 아닌건 호출 할 수가 없어.
쓰려면? 객체를 생성해서 써야된다는 소리.


객체없이 접근이 가능하다.
b는 지금 메인에서 바로 가져다 쓸 수 있잖아. b 도 멤버 변수지. 스테틱이긴 하지만.
객체를 만들었다면 a처럼 쓰는데 객체를 만들었다면
		System.out.println(" b : " + se1.b);
이렇게 쓰는 것도 가능해


그런데 실제로 스테틱변수를 많이 쓰는 방법인 a 방법, b 방법도 아냐
스테틱변수는 어디에 있든지 그냥 막 가져다 쓰면 된대. 그러면 나중에 우리가 오오피를 하면
만들어진 클래스를 갖다 쓸텐데 이놈저놈이 만들어 쓰니까 어딘가에 b란 변수가 있을꺼고 어떤놈이 또 b를 쓰는 놈이 있을꺼야
동시에 막 갖다가 쓰다보면 스테틱 변수가 같은 이름을 갖고 있어서 충돌할 수도 있어
그래서 반드시, 소속은 밝히기로 한거야. 클래스 이름을 주는거지.
	System.out.println(" b : " + StaticEx.b);
	이게 우리가 쓰는 방식입니다. 클래스이름을, 소속을 밝히는 것.

논스테틱은 객체.멤버
스테틱은 클래스.멤버
	이렇게 갖다 쓰기.

System.out 이건 out이라는 멤버가 스테틱 멤버라서 쓰는거야. 클래스.멤버
	out.println 객체.멤버

후 이렇게 하면 결과값이
	StaticEx se2 = new StaticEx();
	se2.a += 10;
	se2.b += 10;
	System.out.println("se2 a : "+ se2.a);
	System.out.println("se2 b : "+ se2.b);
	
se2 b 만 30으로 늘어난다.
이 예제에서는 스택 힙 스테틱 다 쓰는 중입니다
객체를 처음 만들었어요 se1. 멤버중에 하나는 스테틱이래. 이건 스테틱에 생긴댔어
비라고 하고 10이라 그랬어. 객체를 만들기 전부터 생성이 된것.
에이는 힙 영역에 있고
근데 se1가 메인영역안에서 스택으로 생성이 되고 에이를 접근하는건 알겠는데 비는? 스테틱에 있는데?
이건 자동으로 힙과 스테틱을 연결해줘서 접근은 할 수 있게 만들어주는거야
연결.

se2를 만들었어
에이는 스태틱이 아니니까 se2가 참조하는 에이 방을 새로 방을 파.
비는?
또 자동으로 스테틱과 연결이 되. 
에이라는 방은 스테틱이 아니니까 방을 따로 갖고 있고, 에이를 10 누적해라 하니깐 새로 판 방 에이에다가 누적했고 // 20
스테틱에는 방이 하나라 30
	스테틱 변수에는 객체를 아무리 많이 만들어도 하나밖에 없고, 그걸 멤버들이 전부 공유해
	그래서 누적하는 곳에 많이 사용한다.

	하나의 클래스에서 하나밖에 안 잡기 때문에 클래스 변수,
	메소드에서 잡으면 클래스 메서드

다시.
se2를 만들었어
	private static int b=10;
이게 있네? 다시 초기화가 됐으면 결과값이 20이 나와야되는거 아닌가?
아니야 초기화는 한 번 밖에 안되는 것.

스테틱은 객체를 만들기 전부터 있는 거기 때문에 초기화를 못해.
변수도 알아서 만드는데 초기화도 알아서 해야지 뭐. 

*/

